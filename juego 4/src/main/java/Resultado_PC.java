
import java.util.ArrayList;
/**
 * Clase Resultado_PC que representa la ventana de resultados de una partida jugada contra la computadora.
 * Muestra la jugada del usuario y de la computadora, así como el resultado de la partida.
 */
public class Resultado_PC extends javax.swing.JFrame {

    public int racha=0;// Racha de victorias del jugador
    public int num_partida=0;// Número de la partida
    public String usuario="";// Nombre del usuario
    public int jugada_pc=0;// Jugada de la computadora
    public int jugada_usuario=0;// Jugada del usuario
    public String final_partida="";// Estado final de la partida
    public String direc_logros="";// Dirección para guardar logros
    public String direc_historial="";// Dirección para guardar historial
    /**
     * Constructor por defecto de la clase Resultado_PC.
     */
    public Resultado_PC() {
        initComponents();
    }
    /**
     * Establece la racha de victorias del jugador.
     *
     * @param racha La racha de victorias.
     */
    public void setRacha(int racha) {
        this.racha = racha;
    }
    /**
     * Establece el número de la partida.
     *
     * @param num_partida El número de la partida.
     */
    public void setNum_partida(int num_partida) {
        this.num_partida = num_partida;
    }
    /**
     * Establece la jugada de la computadora.
     *
     * @param jugada Jugada de la computadora.
     */
    public void setJugada_PC(int jugada){
        jugada_pc=jugada;
    }
    /**
     * Establece la jugada del usuario.
     *
     * @param jugada Jugada del usuario.
     */
    public void setJugada_Usuario(int jugada){
        jugada_usuario=jugada;
    }
    /**
     * Establece el nombre del usuario.
     *
     * @param usuario Nombre del usuario.
     */
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }
    /**
     * Establece el estado final de la partida.
     *
     * @param final_partida Estado final de la partida.
     */
    public void setFinal_Partida(String final_partida) {
        this.final_partida = final_partida;
    }
    /**
     * Establece la dirección para guardar los logros.
     *
     * @param direc_logros La dirección donde se guardan los logros.
     */
    public void setDirec_Logros(String direc_logros) {
        this.direc_logros = direc_logros;
    }
    /**
     * Establece la dirección para guardar el historial de partidas.
     *
     * @param direc_historial La dirección donde se guarda el historial.
     */
    public void setDirec_Historial(String direc_historial) {
        this.direc_historial = direc_historial;
    }
    /**
     * Carga y muestra los datos de la partida en la interfaz gráfica.
     */
    public void cargar_datos(){
        lbl_usuario.setText(usuario+": "+Nom_Jugada(jugada_usuario));
        lbl_pc.setText("Computadora: "+Nom_Jugada(jugada_pc));
        lbl_resultado.setText(final_partida);
    }
    /**
     * Inicializa los componentes de la interfaz gráfica.
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_logro_aviso = new javax.swing.JLabel();
        lbl_logro_obtenido = new javax.swing.JLabel();
        lbl_resultado = new javax.swing.JLabel();
        lbl_usuario = new javax.swing.JLabel();
        lbl_pc = new javax.swing.JLabel();
        BT_volver_a_jugar = new javax.swing.JButton();
        BT_Terminar_juego = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_logro_aviso.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_logro_aviso.setText(" ");
        getContentPane().add(lbl_logro_aviso, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        lbl_logro_obtenido.setText(" ");
        getContentPane().add(lbl_logro_obtenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 28, -1, -1));

        lbl_resultado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbl_resultado.setText("Resultado");
        getContentPane().add(lbl_resultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 79, -1, -1));

        lbl_usuario.setText("usuario");
        getContentPane().add(lbl_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 110, -1, -1));

        lbl_pc.setText("pc");
        getContentPane().add(lbl_pc, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 132, -1, -1));

        BT_volver_a_jugar.setText("Volver a jugar");
        BT_volver_a_jugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_volver_a_jugarActionPerformed(evt);
            }
        });
        getContentPane().add(BT_volver_a_jugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 260, -1, -1));

        BT_Terminar_juego.setText("Terminar Juego");
        BT_Terminar_juego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_Terminar_juegoActionPerformed(evt);
            }
        });
        getContentPane().add(BT_Terminar_juego, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 260, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Acción al presionar el botón "Terminar Juego".
     * Cambia a la ventana del menú principal.
     *
     * @param evt Evento de acción.
     */
    private void BT_Terminar_juegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_Terminar_juegoActionPerformed
        Menu newframe=new Menu();
        newframe.setDirec_Historial(direc_historial);
        newframe.setDirec_Logros(direc_logros);
        newframe.setUsuario(usuario);
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BT_Terminar_juegoActionPerformed
    /**
     * Acción al presionar el botón "Volver a jugar".
     * Cambia a la ventana del juego.
     *
     * @param evt Evento de acción.
     */
    private void BT_volver_a_jugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_volver_a_jugarActionPerformed
        Juego_PC newframe=new Juego_PC();
        newframe.setUsuario(usuario);
        newframe.setDirec_Historial(direc_historial);
        newframe.setDirec_Logros(direc_logros);
        newframe.setNum_partida(num_partida);
        newframe.setRacha(racha);
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BT_volver_a_jugarActionPerformed
    /**
     * Método principal que inicia la aplicación y muestra la ventana de resultados.
     *
     * @param args Los argumentos de línea de comandos.
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Resultado_PC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Terminar_juego;
    private javax.swing.JButton BT_volver_a_jugar;
    private javax.swing.JLabel lbl_logro_aviso;
    private javax.swing.JLabel lbl_logro_obtenido;
    private static javax.swing.JLabel lbl_pc;
    private static javax.swing.JLabel lbl_resultado;
    private static javax.swing.JLabel lbl_usuario;
    // End of variables declaration//GEN-END:variables
   /**
     * Devuelve el nombre de la jugada basada en el número de jugada.
     *
     * @param jugada Número de la jugada.
     * @return Nombre de la jugada (Piedra, Papel o Tijeras).
     */
    private String Nom_Jugada(int jugada) {
        if(jugada==1)
            return "Piedra";
        if(jugada==2)
            return "Papel";

        return "Tijeras";
    }
    /**
     * Obtiene los logros obtenidos por el jugador y actualiza la interfaz.
     *
     * @param lista   Lista de logros disponibles.
     * @param racha   Racha actual del jugador.
     * @param partida Número de la partida actual.
     */
    public void obtener_logro(ArrayList<Logro> lista, int racha, int partida) {
        String logros_obtenidos=" ";
        Logro act=new Logro();
        for (int aux = 0; aux < lista.size(); aux++) {
            act = lista.get(aux);
            if (!act.getEstado()) {
                act.setEstado(racha, partida);
                if (act.getEstado()) {
                    lbl_logro_aviso.setText("¡LOGRO OBTENIDO!");
                    if(logros_obtenidos.equals(" ")){
                        logros_obtenidos="-"+act.getNombre();
                    }else{
                        logros_obtenidos=logros_obtenidos+"<p>-"+act.getNombre();
                    }
                    lista.set(aux, act);
                }
            }
        }
        lbl_logro_obtenido.setText("<html>"+logros_obtenidos+"<html>");
        act.guardarLogros(lista, direc_logros);
    }
}
